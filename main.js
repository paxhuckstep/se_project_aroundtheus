!function(){"use strict";class e{constructor(e,t,s,r,n){this._name=e.name,this._link=e.link,this._ID=e._id,this._isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleLikeClick=r,this._handleTrashClick=n}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>{this._handleLikeClick(this),console.log(this)})),this._cardTrashButton.addEventListener("click",(()=>{this._handleTrashClick(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}cardDeletionConfirmed(){console.log("card delete clicked"),this._cardElement.remove(),this._cardElement=null}handleLikeIcon(){this._cardLikeButton.classList.toggle("card__like-button_active")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardLikeButton=this._cardElement.querySelector(".card__like-button"),this._cardTrashButton=this._cardElement.querySelector(".card__trash-button"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._checkLikeView(),this._setEventListeners(),this._cardElement}_checkLikeView(){this._isLiked?this._cardLikeButton.classList.add("card__like-button_active"):this._cardLikeButton.classList.remove("card__like-button_active")}getId(){return this._ID}getLikeStatus(){return this._isLiked}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector("#"+e.id+"-error");e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_removeInputError(e){const t=this._form.querySelector("#"+e.id+"-error");e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._removeInputError(e)}))}disableButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_hasInvalidInput(){return!this._inputList.every((e=>e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._removeInputError(e):this._showInputError(e)}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}openPopup(){console.log(this._popupElement),this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}closePopup(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown,",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.closePopup()};setEventListeners(){console.log(this._popupElement),this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close"))&&this.closePopup()}))}}class r extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=this._popupForm.querySelectorAll(".modal__input"),this._saveButton=this._popupForm.querySelector(".modal__save")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setButtonTextSave(){setTimeout((()=>{this._saveButton.textContent="Save"}),600)}resetForm(){this._popupForm.reset()}setEventListeners(){this._popupForm.addEventListener("submit",(()=>{this._saveButton.textContent="Saving...",this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}const n=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}handleServerResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this.handleServerResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{headers:this._headers,method:"PUT"}).then(this.handleServerResponse)}unLikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{headers:this._headers,method:"DELETE"}).then(this.handleServerResponse)}createNewCard(e){return fetch(`${this._baseUrl}/cards`,{headers:this._headers,method:"POST",body:JSON.stringify({name:e.title,link:e.url})}).then(this.handleServerResponse)}deleteSelectedCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{headers:this._headers,method:"DELETE"}).then(this.handleServerResponse)}getCurrentUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this.handleServerResponse)}updateProfileInfo(e){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e.name,about:e.description})}).then(this.handleServerResponse)}updateProfileAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then(this.handleServerResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"3842a5e9-1960-4db2-bd37-d3db8df7459f","Content-Type":"application/json"}}),o=document.querySelector("#edit-modal"),i=document.querySelector(".profile__add-button"),a=document.querySelector(".profile__edit-button"),l=document.querySelector("#profile-title-input"),c=document.querySelector("#profile-description-input"),d=o.querySelector("#profile-edit-form"),h=document.querySelector("#add-card-form"),u=document.querySelector(".profile__avatar-button"),_=document.querySelector("#avatar-photo-form"),p={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};function m(t){const s=function(t){return new e(t,"#card-template",v,E,S).getView()}(t);f.addItem(s)}function v(e){B.openPopup(e)}function E(e){const t=e.getId();e.getLikeStatus()?n.unLikeCard(t).then((()=>{e.handleLikeIcon()})).catch((e=>{console.log(e)})):n.likeCard(t).then((()=>{e.handleLikeIcon()})).catch((e=>{console.log(e)}))}function S(e){console.log(e);const t=e.getId();q.openPopup(),q.setSubmitAction((()=>{n.deleteSelectedCard(t).then((()=>{e.cardDeletionConfirmed(),q.closePopup()})).catch((e=>{console.log(e)})).finally((()=>{q.setButtonTextYes()}))}))}a.addEventListener("click",(()=>{b.resetValidation();const e=L.getUserInfo();C.openPopup(),l.value=e.name,c.value=e.job})),i.addEventListener("click",(()=>{y.openPopup()})),u.addEventListener("click",(()=>{k.resetValidation(),I.openPopup()}));const L=new class{constructor(e){let{userName:t,userJob:s,userAvatar:r}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s),this._avatarElement=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.name,this._jobElement.textContent=e.job}setAvatarUrl(e){this._avatarElement.src=e}}({userName:".profile__title",userJob:".profile__description",userAvatar:".profile__image"}),f=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this.cardListEl=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this.cardListEl.prepend(e)}}({renderer:m},".cards__list"),b=new t(p,d);b.enableValidation();const g=new t(p,h);g.enableValidation();const k=new t(p,_);k.enableValidation();const y=new r("#card-add-modal",(function(e){n.createNewCard(e).then((e=>{m(e),g.disableButton(),y.resetForm(),y.closePopup()})).catch((e=>{console.log(e)})).finally((()=>{y.setButtonTextSave()}))}));y.setEventListeners();const C=new r("#edit-modal",(function(e){n.updateProfileInfo(e).then((e=>{L.setUserInfo({name:e.name,job:e.about}),C.resetForm(),C.closePopup()})).catch((e=>console.log(e))).finally((()=>{C.setButtonTextSave()}))}));C.setEventListeners();const I=new r("#change-avatar-modal",(function(e){n.updateProfileAvatar(e.url).then((e=>{L.setAvatarUrl(e.avatar),I.resetForm(),I.closePopup()})).catch((e=>{console.log(e)})).finally((()=>{I.setButtonTextSave()}))}));I.setEventListeners();const B=new class extends s{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector("#picture-modal-image"),this._title=this._popupElement.querySelector("#picture-modal-heading")}openPopup(e){let{name:t,link:s}=e;this._image.src=s,this._image.alt=t,this._title.textContent=t,super.openPopup()}}("#picture-modal");B.setEventListeners();const q=new class extends s{constructor(e){super({popupSelector:e}),this._yesDeleteButton=document.querySelector("#delete-card-button"),this._saveButton=this._popupElement.querySelector(".modal__save")}setSubmitAction(e){this._handleSubmit=e}setButtonTextYes(){setTimeout((()=>{this._saveButton.textContent="Yes"}),600)}setEventListeners(){this._yesDeleteButton.addEventListener("click",(()=>{this._saveButton.textContent="Deleting...",this._handleSubmit()})),super.setEventListeners()}}("#delete-card-modal");q.setEventListeners(),n.getInitialCards().then((e=>{f.renderItems(e)})).catch((e=>{console.error(e)})),n.getCurrentUserInfo().then((e=>{L.setUserInfo({name:e.name,job:e.about}),L.setAvatarUrl(e.avatar)})).catch((e=>console.log(e)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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WyJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0aW9uLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xyXG4gIGNvbnN0cnVjdG9yKGNhcmREYXRhLCBjYXJkU2VsZWN0b3IsIGhhbmRsZUltYWdlQ2xpY2ssIGhhbmRsZUxpa2VDbGljaywgaGFuZGxlVHJhc2hDbGljaykge1xyXG4gICAgdGhpcy5fbmFtZSA9IGNhcmREYXRhLm5hbWU7XHJcbiAgICB0aGlzLl9saW5rID0gY2FyZERhdGEubGluaztcclxuICAgIHRoaXMuX0lEID0gY2FyZERhdGEuX2lkO1xyXG4gICAgdGhpcy5faXNMaWtlZCA9IGNhcmREYXRhLmlzTGlrZWQ7XHJcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrID0gaGFuZGxlSW1hZ2VDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayA9IGhhbmRsZUxpa2VDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZVRyYXNoQ2xpY2sgPSBoYW5kbGVUcmFzaENsaWNrO1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fY2FyZExpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlTGlrZUNsaWNrKHRoaXMpO1xyXG4gICAgICBjb25zb2xlLmxvZyh0aGlzKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5fY2FyZFRyYXNoQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZVRyYXNoQ2xpY2sodGhpcyk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKHsgbmFtZTogdGhpcy5fbmFtZSwgbGluazogdGhpcy5fbGluayB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgY2FyZERlbGV0aW9uQ29uZmlybWVkKCkgeyAvLyBfaGFuZGxldHJhc2hCdXR0b25cclxuICAgIGNvbnNvbGUubG9nKFwiY2FyZCBkZWxldGUgY2xpY2tlZFwiKTtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSBudWxsO1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlTGlrZUljb24oKSB7XHJcbiAgICB0aGlzLl9jYXJkTGlrZUJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VmlldygpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIilcclxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcclxuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XHJcbiAgICB0aGlzLl9jYXJkVGl0bGUgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpO1xyXG4gICAgdGhpcy5fY2FyZExpa2VCdXR0b24gPVxyXG4gICAgICB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fY2FyZFRyYXNoQnV0dG9uID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgXCIuY2FyZF9fdHJhc2gtYnV0dG9uXCJcclxuICAgICk7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xyXG4gICAgdGhpcy5fY2FyZFRpdGxlLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuXHJcbiAgICB0aGlzLl9jaGVja0xpa2VWaWV3KCk7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xyXG4gIH1cclxuICBfY2hlY2tMaWtlVmlldygpIHtcclxuICAgIGlmICh0aGlzLl9pc0xpa2VkKSB7XHJcbiAgICAgIHRoaXMuX2NhcmRMaWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9jYXJkTGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuICBnZXRJZCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9JRDtcclxuICB9XHJcbiAgZ2V0TGlrZVN0YXR1cygpIHtcclxuICAgIHJldHVybiB0aGlzLl9pc0xpa2VkO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3RvcihzZXR0aW5ncywgZm9ybUVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBzZXR0aW5ncy5pbnB1dFNlbGVjdG9yO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBzZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBzZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xyXG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IHNldHRpbmdzLmVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9mb3JtID0gZm9ybUVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbCkge1xyXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIFwiI1wiICsgaW5wdXRFbC5pZCArIFwiLWVycm9yXCJcclxuICAgICk7XHJcbiAgICBpbnB1dEVsLmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gaW5wdXRFbC52YWxpZGF0aW9uTWVzc2FnZTtcclxuICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfcmVtb3ZlSW5wdXRFcnJvcihpbnB1dEVsKSB7XHJcbiAgICBjb25zdCBlcnJvck1lc3NhZ2VFbCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihcclxuICAgICAgXCIjXCIgKyBpbnB1dEVsLmlkICsgXCItZXJyb3JcIlxyXG4gICAgKTtcclxuICAgIGlucHV0RWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JNZXNzYWdlRWwudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcbiAgcmVzZXRWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuXHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIHRoaXMuX3JlbW92ZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZGlzYWJsZUJ1dHRvbigpIHtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xyXG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCgpKSB7XHJcbiAgICAgIHRoaXMuZGlzYWJsZUJ1dHRvbigpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfaGFzSW52YWxpZElucHV0KCkge1xyXG4gICAgcmV0dXJuICF0aGlzLl9pbnB1dExpc3QuZXZlcnkoKGlucHV0RWwpID0+IGlucHV0RWwudmFsaWRpdHkudmFsaWQpO1xyXG4gIH1cclxuXHJcbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKSB7XHJcbiAgICBpZiAoIWlucHV0RWwudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9yZW1vdmVJbnB1dEVycm9yKGlucHV0RWwpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcclxuICAgICAgdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpXHJcbiAgICApO1xyXG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIG9wZW5Qb3B1cCgpIHtcclxuICAgIC8vIG9wZW4gcG9wdXAgKHdoYXRzIGEgbW9kYWwgdnMgcG9wdXA/KVxyXG4gICAgY29uc29sZS5sb2codGhpcy5fcG9wdXBFbGVtZW50KTtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2VQb3B1cCgpIHtcclxuICAgIC8vY2xvc2VzIHBvcHVwXHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcIm1vZGFsX29wZW5lZFwiKTtcclxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duLFwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlRXNjQ2xvc2UgPSAoZSkgPT4ge1xyXG4gICAgLy9saXN0ZW5zIHRvIGVzYyBidXR0b25cclxuICAgIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICB0aGlzLmNsb3NlUG9wdXAoKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIGNvbnNvbGUubG9nKHRoaXMuX3BvcHVwRWxlbWVudCk7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGlmIChcclxuICAgICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsX29wZW5lZFwiKSB8fFxyXG4gICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWxfX2Nsb3NlXCIpXHJcbiAgICAgICkge1xyXG4gICAgICAgIHRoaXMuY2xvc2VQb3B1cCgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcclxuICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9faW5wdXRcIik7XHJcbiAgICB0aGlzLl9zYXZlQnV0dG9uID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3NhdmVcIik7XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICBjb25zdCBmb3JtVmFsdWVzID0ge307XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgZm9ybVZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gZm9ybVZhbHVlcztcclxuICB9XHJcblxyXG4gIC8vICBvcGVuUG9wdXAoKSB7XHJcbiAgLy8gICB0aGlzLl9zYXZlQnV0dG9uLnRleHRDb250ZW50ID0gXCJTYXZlXCI7XHJcbiAgLy8gICBzdXBlci5vcGVuUG9wdXAoKTtcclxuICAvLyAgfVxyXG5cclxuICBzZXRCdXR0b25UZXh0U2F2ZSgpIHtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICB0aGlzLl9zYXZlQnV0dG9uLnRleHRDb250ZW50ID0gXCJTYXZlXCI7XHJcbiAgICB9LCA2MDApO1xyXG4gIH1cclxuXHJcbiAgcmVzZXRGb3JtKCkge1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtLnJlc2V0KCk7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX3BvcHVwRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsICgpID0+IHtcclxuICAgICAgdGhpcy5fc2F2ZUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiU2F2aW5nLi4uXCI7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICAgIC8vdGhpcy5fcG9wdXBGb3JtLnJlc2V0KCk7XHJcbiAgICAgIC8vdGhpcy5jbG9zZVBvcHVwKCk7XHJcbiAgICB9KTtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xyXG4gICAgLy8gY29uc3RydWN0b3IgYm9keVxyXG4gICAgdGhpcy5fYmFzZVVybCA9IG9wdGlvbnMuYmFzZVVybDtcclxuICAgIHRoaXMuX2hlYWRlcnMgPSBvcHRpb25zLmhlYWRlcnM7XHJcbiAgfVxyXG5cclxuICAvLyBDIENyZWF0ZSBSIFJlYWQgVSBVcGRhdGUgRCBEZWxldGVcclxuICAvLyBQT1NULCBHRVQqLCB7IFBBVENILCBQVVQgfSwgREVMRVRFXHJcblxyXG4gIC8vIGNyZWF0ZSBmdW5jdGlvbiB0byBoYW5kbGUgc2VydmVyIHJlc3BvbnNlXHJcblxyXG4gIGhhbmRsZVNlcnZlclJlc3BvbnNlKHJlcykge1xyXG4gICAgaWYgKHJlcy5vaykge1xyXG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgIH1cclxuICAgIC8vIGlmIHRoZSBzZXJ2ZXIgcmV0dXJucyBhbiBlcnJvciwgcmVqZWN0IHRoZSBwcm9taXNlXHJcbiAgICBlbHNlIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcclxuICB9XHJcblxyXG4gIC8vVGhpcyByZXBsYWNlcyBjb25zdCBcImluaXRpYWxDYXJkc1wiIHJpZ2h0PyAobGluZSAyMyBpbiBjb25zdGFudHMuanMpXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLmhhbmRsZVNlcnZlclJlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGxpa2VDYXJkKGNhcmRJRCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElEfS9saWtlc2AsIHtcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxyXG4gICAgfSkudGhlbih0aGlzLmhhbmRsZVNlcnZlclJlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIHVuTGlrZUNhcmQoY2FyZElEKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSUR9L2xpa2VzYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICB9KS50aGVuKHRoaXMuaGFuZGxlU2VydmVyUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlTmV3Q2FyZChjYXJkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBjYXJkLnRpdGxlLFxyXG4gICAgICAgIGxpbms6IGNhcmQudXJsLFxyXG4gICAgICB9KSxcclxuICAgIH0pLnRoZW4odGhpcy5oYW5kbGVTZXJ2ZXJSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBkZWxldGVTZWxlY3RlZENhcmQoY2FyZElEKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSUR9YCwvKndoZXJlIGRvIHdlIGdldCBjYXJkSWQqLyAge1xyXG4gICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgfSkudGhlbih0aGlzLmhhbmRsZVNlcnZlclJlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIC8vICAgLy8gb3RoZXIgbWV0aG9kcyBmb3Igd29ya2luZyB3aXRoIHRoZSBBUElcclxuXHJcbiAgZ2V0Q3VycmVudFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLmhhbmRsZVNlcnZlclJlc3BvbnNlKTtcclxuICB9XHJcbiAgXHJcblxyXG4gIHVwZGF0ZVByb2ZpbGVJbmZvKG5ld1VzZXJJbmZvKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogbmV3VXNlckluZm8ubmFtZSxcclxuICAgICAgICBhYm91dDogbmV3VXNlckluZm8uZGVzY3JpcHRpb24sXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLmhhbmRsZVNlcnZlclJlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gICAgdXBkYXRlUHJvZmlsZUF2YXRhcihhdmF0YXJJbmZvKSB7XHJcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgIGF2YXRhcjogYXZhdGFySW5mb1xyXG4gICAgICAgICAgfSlcclxuICAgICAgfSkudGhlbih0aGlzLmhhbmRsZVNlcnZlclJlc3BvbnNlKTtcclxuICAgIH1cclxufVxyXG5cclxuLy9kb2VzIHRoaXMgZ28gdG8gY29uc3RhbnRzLmpzPz8/Pz9cclxuZXhwb3J0IGNvbnN0IGFwaSA9IG5ldyBBcGkoe1xyXG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjFcIixcclxuICBoZWFkZXJzOiB7XHJcbiAgICBhdXRob3JpemF0aW9uOiBcIjM4NDJhNWU5LTE5NjAtNGRiMi1iZDM3LWQzZGI4ZGY3NDU5ZlwiLFxyXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgfSxcclxufSk7XHJcbiIsImV4cG9ydCBjb25zdCBwcm9maWxlRWRpdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0LW1vZGFsXCIpO1xyXG5leHBvcnQgY29uc3QgYWRkTmV3Q2FyZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ1dHRvblwiKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICBcIi5wcm9maWxlX19lZGl0LWJ1dHRvblwiXHJcbik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlVGl0bGVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS10aXRsZS1pbnB1dFwiKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICBcIiNwcm9maWxlLWRlc2NyaXB0aW9uLWlucHV0XCJcclxuKTtcclxuXHJcbmV4cG9ydCBjb25zdCBwcm9maWxlRWRpdEZvcm0gPVxyXG4gIHByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtZm9ybVwiKTtcclxuZXhwb3J0IGNvbnN0IGFkZENhcmRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZC1mb3JtXCIpO1xyXG5leHBvcnQgY29uc3QgYXZhdGFyUGhvdG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2F2YXRhci1idXR0b25cIik7XHJcbmV4cG9ydCBjb25zdCBhdmF0YXJQaG90b0Zvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2F2YXRhci1waG90by1mb3JtXCIpO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNldHRpbmdzID0ge1xyXG4gIGZvcm1TZWxlY3RvcjogXCIubW9kYWxfX2Zvcm1cIixcclxuICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX3NhdmVcIixcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19zYXZlX2Rpc2FibGVkXCIsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgZXJyb3JDbGFzczogXCJtb2RhbF9fZXJyb3JfdmlzaWJsZVwiLFxyXG59O1xyXG4iLCJpbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0aW9uLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XHJcbmltcG9ydCBcIi4vaW5kZXguY3NzXCI7XHJcbmltcG9ydCB7IGFwaSB9IGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xyXG5cclxuaW1wb3J0IHtcclxuICBwcm9maWxlRWRpdEZvcm0sXHJcbiAgYWRkTmV3Q2FyZEJ1dHRvbixcclxuICBwcm9maWxlRWRpdEJ1dHRvbixcclxuICBwcm9maWxlVGl0bGVJbnB1dCxcclxuICBwcm9maWxlRGVzY3JpcHRpb25JbnB1dCxcclxuICBhZGRDYXJkRm9ybSxcclxuICBzZXR0aW5ncyxcclxuICBhdmF0YXJQaG90byxcclxuICBhdmF0YXJQaG90b0Zvcm0sXHJcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5pbXBvcnQgUG9wdXAgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXAuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aENvbmZpcm1hdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtYXRpb24uanNcIjtcclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoY2FyZERhdGEpIHtcclxuICBjb25zdCBjYXJkRWxlbWVudCA9IG5ldyBDYXJkKFxyXG4gICAgY2FyZERhdGEsXHJcbiAgICBcIiNjYXJkLXRlbXBsYXRlXCIsXHJcbiAgICBoYW5kbGVJbWFnZUJ1dHRvbixcclxuICAgIGhhbmRsZUxpa2VDbGljayxcclxuICAgIGhhbmRsZVRyYXNoQnV0dG9uXHJcbiAgKTtcclxuICByZXR1cm4gY2FyZEVsZW1lbnQuZ2V0VmlldygpO1xyXG59XHJcblxyXG5mdW5jdGlvbiByZW5kZXJDYXJkKGNhcmREYXRhKSB7XHJcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBjcmVhdGVDYXJkKGNhcmREYXRhKTtcclxuICBjYXJkU2VjdGlvbi5hZGRJdGVtKGNhcmRFbGVtZW50KTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlSW1hZ2VCdXR0b24oY2FyZERhdGEpIHtcclxuICBpbWFnZVBvcHVwLm9wZW5Qb3B1cChjYXJkRGF0YSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUxpa2VDbGljayhjYXJkKSB7XHJcbiAgY29uc3QgY2FyZElkID0gY2FyZC5nZXRJZCgpO1xyXG4gIGNvbnN0IGlzTGlrZWQgPSBjYXJkLmdldExpa2VTdGF0dXMoKTtcclxuICBpZiAoaXNMaWtlZCkge1xyXG4gICAgYXBpXHJcbiAgICAgIC51bkxpa2VDYXJkKGNhcmRJZClcclxuICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgIGNhcmQuaGFuZGxlTGlrZUljb24oKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgICAgfSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGFwaVxyXG4gICAgICAubGlrZUNhcmQoY2FyZElkKVxyXG4gICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgY2FyZC5oYW5kbGVMaWtlSWNvbigpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZVRyYXNoQnV0dG9uKGNhcmQpIHtcclxuICBjb25zb2xlLmxvZyhjYXJkKTtcclxuICBjb25zdCBjYXJkSWQgPSBjYXJkLmdldElkKCk7XHJcbiAgY2FyZERlbGV0ZVBvcHVwLm9wZW5Qb3B1cCgpO1xyXG4gIGNhcmREZWxldGVQb3B1cC5zZXRTdWJtaXRBY3Rpb24oKCkgPT4ge1xyXG4gICAgYXBpXHJcbiAgICAgIC5kZWxldGVTZWxlY3RlZENhcmQoY2FyZElkKVxyXG4gICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgY2FyZC5jYXJkRGVsZXRpb25Db25maXJtZWQoKTtcclxuICAgICAgICBjYXJkRGVsZXRlUG9wdXAuY2xvc2VQb3B1cCgpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICB9KVxyXG4gICAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgICAgY2FyZERlbGV0ZVBvcHVwLnNldEJ1dHRvblRleHRZZXMoKTtcclxuICAgICAgfSk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHN1Ym1pdFByb2ZpbGVGb3JtKHVzZXJEYXRhSW5wdXQpIHtcclxuICBhcGlcclxuICAgIC51cGRhdGVQcm9maWxlSW5mbyh1c2VyRGF0YUlucHV0KVxyXG4gICAgLnRoZW4oKHVzZXJEYXRhKSA9PiB7XHJcbiAgICAgIHVzZXJJbmZvTWFpbi5zZXRVc2VySW5mbyh7XHJcbiAgICAgICAgbmFtZTogdXNlckRhdGEubmFtZSxcclxuICAgICAgICBqb2I6IHVzZXJEYXRhLmFib3V0LFxyXG4gICAgICB9KTtcclxuICAgICAgZWRpdFByb2ZpbGVQb3B1cC5yZXNldEZvcm0oKTtcclxuICAgICAgZWRpdFByb2ZpbGVQb3B1cC5jbG9zZVBvcHVwKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5sb2coZXJyb3IpKVxyXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICBlZGl0UHJvZmlsZVBvcHVwLnNldEJ1dHRvblRleHRTYXZlKCk7XHJcbiAgICB9KTtcclxufVxyXG5mdW5jdGlvbiBzdWJtaXRBdmF0YXJMaW5rKHVybElucHV0KSB7XHJcbiAgYXBpXHJcbiAgICAudXBkYXRlUHJvZmlsZUF2YXRhcih1cmxJbnB1dC51cmwpXHJcbiAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICB1c2VySW5mb01haW4uc2V0QXZhdGFyVXJsKGRhdGEuYXZhdGFyKTtcclxuICAgICAgY2hhbmdlQXZhdGFyUG9wdXAucmVzZXRGb3JtKCk7XHJcbiAgICAgIGNoYW5nZUF2YXRhclBvcHVwLmNsb3NlUG9wdXAoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIGNoYW5nZUF2YXRhclBvcHVwLnNldEJ1dHRvblRleHRTYXZlKCk7XHJcbiAgICB9KTtcclxufVxyXG5mdW5jdGlvbiBzdWJtaXRDYXJkQWRkKGlucHV0VmFsdWVzKSB7XHJcbiAgYXBpXHJcbiAgICAuY3JlYXRlTmV3Q2FyZChpbnB1dFZhbHVlcylcclxuICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgIHJlbmRlckNhcmQoZGF0YSk7XHJcbiAgICAgIGFkZEZvcm1WYWxpZGF0b3IuZGlzYWJsZUJ1dHRvbigpO1xyXG4gICAgICBuZXdDYXJkUG9wdXAucmVzZXRGb3JtKCk7XHJcbiAgICAgIG5ld0NhcmRQb3B1cC5jbG9zZVBvcHVwKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICB9KVxyXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICBuZXdDYXJkUG9wdXAuc2V0QnV0dG9uVGV4dFNhdmUoKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5wcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGVkaXRGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xyXG4gIGNvbnN0IHVzZXJEZXRhaWxzID0gdXNlckluZm9NYWluLmdldFVzZXJJbmZvKCk7XHJcbiAgZWRpdFByb2ZpbGVQb3B1cC5vcGVuUG9wdXAoKTtcclxuICBwcm9maWxlVGl0bGVJbnB1dC52YWx1ZSA9IHVzZXJEZXRhaWxzLm5hbWU7XHJcbiAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSB1c2VyRGV0YWlscy5qb2I7XHJcbn0pO1xyXG5cclxuYWRkTmV3Q2FyZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIG5ld0NhcmRQb3B1cC5vcGVuUG9wdXAoKTtcclxufSk7XHJcblxyXG5hdmF0YXJQaG90by5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGNoYW5nZUF2YXRhclBvcHVwVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xyXG4gIGNoYW5nZUF2YXRhclBvcHVwLm9wZW5Qb3B1cCgpO1xyXG59KTtcclxuXHJcbmNvbnN0IHVzZXJJbmZvTWFpbiA9IG5ldyBVc2VySW5mbyh7XHJcbiAgdXNlck5hbWU6IFwiLnByb2ZpbGVfX3RpdGxlXCIsXHJcbiAgdXNlckpvYjogXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIixcclxuICB1c2VyQXZhdGFyOiBcIi5wcm9maWxlX19pbWFnZVwiLFxyXG59KTtcclxuXHJcbmNvbnN0IGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oeyByZW5kZXJlcjogcmVuZGVyQ2FyZCB9LCBcIi5jYXJkc19fbGlzdFwiKTtcclxuXHJcbmNvbnN0IGVkaXRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3Ioc2V0dGluZ3MsIHByb2ZpbGVFZGl0Rm9ybSk7XHJcbmVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmNvbnN0IGFkZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihzZXR0aW5ncywgYWRkQ2FyZEZvcm0pO1xyXG5hZGRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmNvbnN0IGNoYW5nZUF2YXRhclBvcHVwVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3Ioc2V0dGluZ3MsIGF2YXRhclBob3RvRm9ybSk7XHJcbmNoYW5nZUF2YXRhclBvcHVwVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmNvbnN0IG5ld0NhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI2NhcmQtYWRkLW1vZGFsXCIsIHN1Ym1pdENhcmRBZGQpO1xyXG5uZXdDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IGVkaXRQcm9maWxlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNlZGl0LW1vZGFsXCIsIHN1Ym1pdFByb2ZpbGVGb3JtKTtcclxuZWRpdFByb2ZpbGVQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgY2hhbmdlQXZhdGFyUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBcIiNjaGFuZ2UtYXZhdGFyLW1vZGFsXCIsXHJcbiAgc3VibWl0QXZhdGFyTGlua1xyXG4pO1xyXG5jaGFuZ2VBdmF0YXJQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgaW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIiNwaWN0dXJlLW1vZGFsXCIpO1xyXG5pbWFnZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBjYXJkRGVsZXRlUG9wdXAgPSBuZXcgUG9wdXBXaXRoQ29uZmlybWF0aW9uKFwiI2RlbGV0ZS1jYXJkLW1vZGFsXCIpO1xyXG5jYXJkRGVsZXRlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmFwaVxyXG4gIC5nZXRJbml0aWFsQ2FyZHMoKVxyXG4gIC50aGVuKChyZXN1bHQpID0+IHtcclxuICAgIGNhcmRTZWN0aW9uLnJlbmRlckl0ZW1zKHJlc3VsdCk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gIH0pO1xyXG5cclxuYXBpXHJcbiAgLmdldEN1cnJlbnRVc2VySW5mbygpXHJcbiAgLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4gICAgdXNlckluZm9NYWluLnNldFVzZXJJbmZvKHtcclxuICAgICAgbmFtZTogcmVzdWx0Lm5hbWUsXHJcbiAgICAgIGpvYjogcmVzdWx0LmFib3V0LFxyXG4gICAgfSk7XHJcbiAgICB1c2VySW5mb01haW4uc2V0QXZhdGFyVXJsKHJlc3VsdC5hdmF0YXIpO1xyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5sb2coZXJyb3IpKTtcclxuXHJcbi8vIGdpdGh1YiBwYWdlcyBsaW5rOiBodHRwczovL3BheGh1Y2tzdGVwLmdpdGh1Yi5pby9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzXHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7IHVzZXJOYW1lLCB1c2VySm9iLCB1c2VyQXZhdGFyIH0pIHtcclxuICAgIHRoaXMuX25hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VyTmFtZSk7XHJcbiAgICB0aGlzLl9qb2JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VySm9iKTtcclxuICAgIHRoaXMuX2F2YXRhckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJBdmF0YXIpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICBjb25zdCB1c2VySW5mbyA9IHtcclxuICAgICAgbmFtZTogdGhpcy5fbmFtZUVsZW1lbnQudGV4dENvbnRlbnQsXHJcbiAgICAgIGpvYjogdGhpcy5fam9iRWxlbWVudC50ZXh0Q29udGVudCxcclxuICAgIH07XHJcbiAgICAvLyBnZXR0aW5nIHRoZSB1c2VyIGluZm9cclxuICAgIHJldHVybiB1c2VySW5mbztcclxuICB9XHJcblxyXG4gIHNldFVzZXJJbmZvKHVzZXJJbnB1dCkge1xyXG4gICAgLy8gc2V0cyB1c2VySW5mbyBhdCBlbmQgb2Ygc3VibWl0UHJvZmlsZUVkaXQgKClcclxuICAgIHRoaXMuX25hbWVFbGVtZW50LnRleHRDb250ZW50ID0gdXNlcklucHV0Lm5hbWU7XHJcbiAgICB0aGlzLl9qb2JFbGVtZW50LnRleHRDb250ZW50ID0gdXNlcklucHV0LmpvYjtcclxuICB9XHJcblxyXG4vLyAgIGdldEF2YXRhckluZm8oKSB7XHJcbi8vICAgY29uc3QgYXZhdGFySW5mbyA9e1xyXG4vLyAgICAgdXJsOiB0aGlzLl9hdmF0YXJFbGVtZW50LnNyYyxcclxuLy8gICB9O1xyXG4vLyAgIHJldHVybiBhdmF0YXJJbmZvO1xyXG4vLyB9XHJcblxyXG4gIHNldEF2YXRhclVybChhdmF0YXJJbnB1dCl7XHJcbiAgICB0aGlzLl9hdmF0YXJFbGVtZW50LnNyYyA9IGF2YXRhcklucHV0O1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7IHJlbmRlcmVyIH0sIGNzc1NlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5jYXJkTGlzdEVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjc3NTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICByZW5kZXJJdGVtcyhpdGVtcykge1xyXG4gICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShpdGVtKSB7XHJcbiAgICB0aGlzLmNhcmRMaXN0RWwucHJlcGVuZChpdGVtKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XHJcbiAgICB0aGlzLl9pbWFnZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiI3BpY3R1cmUtbW9kYWwtaW1hZ2VcIik7XHJcbiAgICB0aGlzLl90aXRsZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiI3BpY3R1cmUtbW9kYWwtaGVhZGluZ1wiKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuX2ltYWdlLCB0aGlzLl90aXRsZSwgdGhpcy5fbmFtZSwgdGhpcy5fbGluayk7XHJcbiAgfVxyXG4gIG9wZW5Qb3B1cCh7IG5hbWUsIGxpbmsgfSkge1xyXG4gICAgLy9vcGVuaW5nIHdpdGggbmFtZSBhbmQgbGluayBvZiBpbWFnZVxyXG4gICAgdGhpcy5faW1hZ2Uuc3JjID0gbGluaztcclxuICAgIHRoaXMuX2ltYWdlLmFsdCA9IG5hbWU7XHJcbiAgICB0aGlzLl90aXRsZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICBzdXBlci5vcGVuUG9wdXAoKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhDb25maXJtYXRpb24gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgdGhpcy5feWVzRGVsZXRlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkZWxldGUtY2FyZC1idXR0b25cIik7XHJcbiAgICB0aGlzLl9zYXZlQnV0dG9uID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3NhdmVcIik7XHJcbiAgfVxyXG5cclxuc2V0U3VibWl0QWN0aW9uKGFjdGlvbikge1xyXG4gICAgdGhpcy5faGFuZGxlU3VibWl0ID0gYWN0aW9uO1xyXG59XHJcblxyXG5zZXRCdXR0b25UZXh0WWVzKCkge1xyXG4gIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgdGhpcy5fc2F2ZUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiWWVzXCI7XHJcbiAgfSwgNjAwKTtcclxufVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX3llc0RlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX3NhdmVCdXR0b24udGV4dENvbnRlbnQgPSBcIkRlbGV0aW5nLi4uXCI7XHJcbiAgICAgIHRoaXMuX2hhbmRsZVN1Ym1pdCgpO1xyXG4gICAgfSk7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiQ2FyZCIsImNvbnN0cnVjdG9yIiwiY2FyZERhdGEiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVJbWFnZUNsaWNrIiwiaGFuZGxlTGlrZUNsaWNrIiwiaGFuZGxlVHJhc2hDbGljayIsInRoaXMiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfSUQiLCJfaWQiLCJfaXNMaWtlZCIsImlzTGlrZWQiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUltYWdlQ2xpY2siLCJfaGFuZGxlTGlrZUNsaWNrIiwiX2hhbmRsZVRyYXNoQ2xpY2siLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfY2FyZExpa2VCdXR0b24iLCJhZGRFdmVudExpc3RlbmVyIiwiY29uc29sZSIsImxvZyIsIl9jYXJkVHJhc2hCdXR0b24iLCJfY2FyZEltYWdlIiwiY2FyZERlbGV0aW9uQ29uZmlybWVkIiwiX2NhcmRFbGVtZW50IiwicmVtb3ZlIiwiaGFuZGxlTGlrZUljb24iLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJnZXRWaWV3IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9jYXJkVGl0bGUiLCJzcmMiLCJhbHQiLCJ0ZXh0Q29udGVudCIsIl9jaGVja0xpa2VWaWV3IiwiYWRkIiwiZ2V0SWQiLCJnZXRMaWtlU3RhdHVzIiwiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybSIsIl9zaG93SW5wdXRFcnJvciIsImlucHV0RWwiLCJlcnJvck1lc3NhZ2VFbCIsImlkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfcmVtb3ZlSW5wdXRFcnJvciIsInJlc2V0VmFsaWRhdGlvbiIsIl90b2dnbGVCdXR0b25TdGF0ZSIsIl9pbnB1dExpc3QiLCJmb3JFYWNoIiwiaW5wdXRFbGVtZW50IiwiZGlzYWJsZUJ1dHRvbiIsIl9idXR0b25FbGVtZW50IiwiZGlzYWJsZWQiLCJfaGFzSW52YWxpZElucHV0IiwiZXZlcnkiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJlbmFibGVWYWxpZGF0aW9uIiwiZSIsInByZXZlbnREZWZhdWx0IiwiUG9wdXAiLCJfcmVmIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cEVsZW1lbnQiLCJvcGVuUG9wdXAiLCJfaGFuZGxlRXNjQ2xvc2UiLCJjbG9zZVBvcHVwIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImtleSIsInNldEV2ZW50TGlzdGVuZXJzIiwiZXZ0IiwidGFyZ2V0IiwiY29udGFpbnMiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsInN1cGVyIiwiX3BvcHVwRm9ybSIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX3NhdmVCdXR0b24iLCJfZ2V0SW5wdXRWYWx1ZXMiLCJmb3JtVmFsdWVzIiwiaW5wdXQiLCJ2YWx1ZSIsInNldEJ1dHRvblRleHRTYXZlIiwic2V0VGltZW91dCIsInJlc2V0Rm9ybSIsInJlc2V0IiwiYXBpIiwib3B0aW9ucyIsIl9iYXNlVXJsIiwiYmFzZVVybCIsIl9oZWFkZXJzIiwiaGVhZGVycyIsImhhbmRsZVNlcnZlclJlc3BvbnNlIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImdldEluaXRpYWxDYXJkcyIsImZldGNoIiwidGhlbiIsImxpa2VDYXJkIiwiY2FyZElEIiwibWV0aG9kIiwidW5MaWtlQ2FyZCIsImNyZWF0ZU5ld0NhcmQiLCJjYXJkIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0aXRsZSIsInVybCIsImRlbGV0ZVNlbGVjdGVkQ2FyZCIsImdldEN1cnJlbnRVc2VySW5mbyIsInVwZGF0ZVByb2ZpbGVJbmZvIiwibmV3VXNlckluZm8iLCJhYm91dCIsImRlc2NyaXB0aW9uIiwidXBkYXRlUHJvZmlsZUF2YXRhciIsImF2YXRhckluZm8iLCJhdmF0YXIiLCJhdXRob3JpemF0aW9uIiwicHJvZmlsZUVkaXRNb2RhbCIsImFkZE5ld0NhcmRCdXR0b24iLCJwcm9maWxlRWRpdEJ1dHRvbiIsInByb2ZpbGVUaXRsZUlucHV0IiwicHJvZmlsZURlc2NyaXB0aW9uSW5wdXQiLCJwcm9maWxlRWRpdEZvcm0iLCJhZGRDYXJkRm9ybSIsImF2YXRhclBob3RvIiwiYXZhdGFyUGhvdG9Gb3JtIiwiZm9ybVNlbGVjdG9yIiwicmVuZGVyQ2FyZCIsImNhcmRFbGVtZW50IiwiaGFuZGxlSW1hZ2VCdXR0b24iLCJoYW5kbGVUcmFzaEJ1dHRvbiIsImNyZWF0ZUNhcmQiLCJjYXJkU2VjdGlvbiIsImFkZEl0ZW0iLCJpbWFnZVBvcHVwIiwiY2FyZElkIiwiY2F0Y2giLCJlcnJvciIsImNhcmREZWxldGVQb3B1cCIsInNldFN1Ym1pdEFjdGlvbiIsImZpbmFsbHkiLCJzZXRCdXR0b25UZXh0WWVzIiwiZWRpdEZvcm1WYWxpZGF0b3IiLCJ1c2VyRGV0YWlscyIsInVzZXJJbmZvTWFpbiIsImdldFVzZXJJbmZvIiwiZWRpdFByb2ZpbGVQb3B1cCIsImpvYiIsIm5ld0NhcmRQb3B1cCIsImNoYW5nZUF2YXRhclBvcHVwVmFsaWRhdG9yIiwiY2hhbmdlQXZhdGFyUG9wdXAiLCJ1c2VyTmFtZSIsInVzZXJKb2IiLCJ1c2VyQXZhdGFyIiwiX25hbWVFbGVtZW50IiwiX2pvYkVsZW1lbnQiLCJfYXZhdGFyRWxlbWVudCIsInNldFVzZXJJbmZvIiwidXNlcklucHV0Iiwic2V0QXZhdGFyVXJsIiwiYXZhdGFySW5wdXQiLCJjc3NTZWxlY3RvciIsInJlbmRlcmVyIiwiX3JlbmRlcmVyIiwiY2FyZExpc3RFbCIsInJlbmRlckl0ZW1zIiwiaXRlbXMiLCJpdGVtIiwicHJlcGVuZCIsImFkZEZvcm1WYWxpZGF0b3IiLCJpbnB1dFZhbHVlcyIsImRhdGEiLCJ1c2VyRGF0YUlucHV0IiwidXNlckRhdGEiLCJ1cmxJbnB1dCIsIl9pbWFnZSIsIl90aXRsZSIsIl95ZXNEZWxldGVCdXR0b24iLCJhY3Rpb24iLCJfaGFuZGxlU3VibWl0IiwicmVzdWx0IiwiZXJyIl0sInNvdXJjZVJvb3QiOiIifQ==